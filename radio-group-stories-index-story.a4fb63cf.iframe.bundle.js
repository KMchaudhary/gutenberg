"use strict";(self.webpackChunkgutenberg=self.webpackChunkgutenberg||[]).push([[3788],{"./packages/components/src/button-group/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var classnames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__),_wordpress_element__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");function UnforwardedButtonGroup(props,ref){const{className,...restProps}=props,classes=classnames__WEBPACK_IMPORTED_MODULE_0___default()("components-button-group",className);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{ref,role:"group",className:classes,...restProps})}UnforwardedButtonGroup.displayName="UnforwardedButtonGroup";const ButtonGroup=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(UnforwardedButtonGroup),__WEBPACK_DEFAULT_EXPORT__=ButtonGroup;try{ButtonGroup.displayName="ButtonGroup",ButtonGroup.__docgenInfo={description:'ButtonGroup can be used to group any related buttons together. To emphasize\nrelated buttons, a group should share a common container.\n\n```jsx\nimport { Button, ButtonGroup } from \'@wordpress/components\';\n\nconst MyButtonGroup = () => (\n  <ButtonGroup>\n    <Button variant="primary">Button 1</Button>\n    <Button variant="primary">Button 2</Button>\n  </ButtonGroup>\n);\n```',displayName:"ButtonGroup",props:{children:{defaultValue:null,description:"The children elements.",name:"children",required:!0,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/button-group/index.tsx#ButtonGroup"]={docgenInfo:ButtonGroup.__docgenInfo,name:"ButtonGroup",path:"packages/components/src/button-group/index.tsx#ButtonGroup"})}catch(__react_docgen_typescript_loader_error){}try{buttongroup.displayName="buttongroup",buttongroup.__docgenInfo={description:'ButtonGroup can be used to group any related buttons together. To emphasize\nrelated buttons, a group should share a common container.\n\n```jsx\nimport { Button, ButtonGroup } from \'@wordpress/components\';\n\nconst MyButtonGroup = () => (\n  <ButtonGroup>\n    <Button variant="primary">Button 1</Button>\n    <Button variant="primary">Button 2</Button>\n  </ButtonGroup>\n);\n```',displayName:"buttongroup",props:{children:{defaultValue:null,description:"The children elements.",name:"children",required:!0,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/button-group/index.tsx#buttongroup"]={docgenInfo:buttongroup.__docgenInfo,name:"buttongroup",path:"packages/components/src/button-group/index.tsx#buttongroup"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/radio-group/stories/index.story.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:()=>Controlled,Disabled:()=>Disabled,__namedExportsOrder:()=>__namedExportsOrder,_default:()=>_default,default:()=>index_story});var react=__webpack_require__("./node_modules/react/index.js"),Radio=__webpack_require__("./node_modules/reakit/es/Radio/Radio.js"),src_button=__webpack_require__("./packages/components/src/button/index.tsx");const radio_context=(0,react.createContext)({state:null,setState:()=>{}});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function radio_Radio({children,value,...props},ref){const radioContext=(0,react.useContext)(radio_context),checked=radioContext.state===value;return(0,jsx_runtime.jsx)(Radio.Y,{ref,as:src_button.ZP,variant:checked?"primary":"secondary",value,...radioContext,...props,children:children||value})}radio_Radio.displayName="Radio",radio_Radio.__docgenInfo={description:"",methods:[],displayName:"Radio"};const radio_group_radio=(0,react.forwardRef)(radio_Radio);var RadioState=__webpack_require__("./node_modules/reakit/es/Radio/RadioState.js"),RadioGroup=__webpack_require__("./node_modules/reakit/es/Radio/RadioGroup.js"),button_group=__webpack_require__("./packages/components/src/button-group/index.tsx");function radio_group_RadioGroup({label,checked,defaultChecked,disabled,onChange,...props},ref){const radioState=(0,RadioState.i)({state:defaultChecked,baseId:props.id}),radioContext={...radioState,disabled,state:null!=checked?checked:radioState.state,setState:null!=onChange?onChange:radioState.setState};return(0,jsx_runtime.jsx)(radio_context.Provider,{value:radioContext,children:(0,jsx_runtime.jsx)(RadioGroup.E,{ref,as:button_group.Z,"aria-label":label,...radioState,...props})})}radio_group_RadioGroup.displayName="RadioGroup",radio_group_RadioGroup.__docgenInfo={description:"",methods:[],displayName:"RadioGroup"};const radio_group=(0,react.forwardRef)(radio_group_RadioGroup),index_story={title:"Components (Deprecated)/RadioGroup",component:radio_group,subcomponents:{Radio:radio_group_radio},parameters:{sourceLink:"packages/components/src/radio-group",docs:{description:{component:"This component is deprecated. Use `RadioControl` or `ToggleGroupControl` instead."}}}},_default=()=>(0,jsx_runtime.jsxs)(radio_group,{id:"default-radiogroup",label:"options",defaultChecked:"option2",children:[(0,jsx_runtime.jsx)(radio_group_radio,{value:"option1",children:"Option 1"}),(0,jsx_runtime.jsx)(radio_group_radio,{value:"option2",children:"Option 2"}),(0,jsx_runtime.jsx)(radio_group_radio,{value:"option3",children:"Option 3"})]});_default.displayName="_default";const Disabled=()=>(0,jsx_runtime.jsxs)(radio_group,{id:"disabled-radiogroup",disabled:!0,label:"options",defaultChecked:"option2",children:[(0,jsx_runtime.jsx)(radio_group_radio,{value:"option1",children:"Option 1"}),(0,jsx_runtime.jsx)(radio_group_radio,{value:"option2",children:"Option 2"}),(0,jsx_runtime.jsx)(radio_group_radio,{value:"option3",children:"Option 3"})]});Disabled.displayName="Disabled";const ControlledRadioGroupWithState=()=>{const[checked,setChecked]=(0,react.useState)(1);return(0,jsx_runtime.jsxs)(radio_group,{id:"controlled-radiogroup",label:"options",checked,onChange:setChecked,children:[(0,jsx_runtime.jsx)(radio_group_radio,{value:0,children:"Option 1"}),(0,jsx_runtime.jsx)(radio_group_radio,{value:1,children:"Option 2"}),(0,jsx_runtime.jsx)(radio_group_radio,{value:2,children:"Option 3"})]})};ControlledRadioGroupWithState.displayName="ControlledRadioGroupWithState";const Controlled=()=>(0,jsx_runtime.jsx)(ControlledRadioGroupWithState,{});Controlled.displayName="Controlled",_default.parameters={..._default.parameters,docs:{..._default.parameters?.docs,source:{originalSource:'() => {\n  /* eslint-disable no-restricted-syntax */\n  return <RadioGroup\n  // id is required for server side rendering\n  id="default-radiogroup" label="options" defaultChecked="option2">\n            <Radio value="option1">Option 1</Radio>\n            <Radio value="option2">Option 2</Radio>\n            <Radio value="option3">Option 3</Radio>\n        </RadioGroup>;\n  /* eslint-enable no-restricted-syntax */\n}',..._default.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'() => {\n  /* eslint-disable no-restricted-syntax */\n  return <RadioGroup\n  // id is required for server side rendering\n  id="disabled-radiogroup" disabled label="options" defaultChecked="option2">\n            <Radio value="option1">Option 1</Radio>\n            <Radio value="option2">Option 2</Radio>\n            <Radio value="option3">Option 3</Radio>\n        </RadioGroup>;\n  /* eslint-enable no-restricted-syntax */\n}',...Disabled.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:"() => {\n  return <ControlledRadioGroupWithState />;\n}",...Controlled.parameters?.docs?.source}}};const __namedExportsOrder=["_default","Disabled","Controlled"];_default.__docgenInfo={description:"",methods:[],displayName:"_default"},Disabled.__docgenInfo={description:"",methods:[],displayName:"Disabled"},Controlled.__docgenInfo={description:"",methods:[],displayName:"Controlled"}}}]);